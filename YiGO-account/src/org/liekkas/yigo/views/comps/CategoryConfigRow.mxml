<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
								xmlns:s="library://ns.adobe.com/flex/spark" 
								xmlns:mx="library://ns.adobe.com/flex/mx"
								xmlns:titleborderbox="org.liekkas.comps.titleborderbox.*"
								width="90%" height="65" xmlns:comps="org.liekkas.yigo.views.comps.*" 
								>
	<fx:Metadata>
		[Event(name="removeRow", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.gskinner.motion.GTween;
			import com.gskinner.motion.easing.Sine;
			
			import mx.core.IVisualElementContainer;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			
			import spark.components.Label;
			import spark.components.TextInput;
			
			[Bindable]public var title:String;
			private var _categorys:Array;
			private var valueChanged:Boolean;
			private var tipInfo:Label= new Label();
			public function set categorys(value:Array):void
			{
				_categorys = value;
				valueChanged = true;
				invalidateProperties();
			}
			
			protected function removeRow(event:MouseEvent):void
			{
				this.dispatchEvent(new Event("removeRow"));
			}
			
			public function addItem():void
			{
				if(row.numElements>5){
					
				}else{
					var ti:CategoryConfigItem = new CategoryConfigItem();
					ti.ti.addEventListener(KeyboardEvent.KEY_DOWN,onKeyDown);
					row.addElement(ti);	
				}
			}
			
			private function onKeyDown(evt:KeyboardEvent):void
			{
				if(evt.keyCode == Keyboard.ENTER)
				{
					addItem();
				}
			}
			
			public function getRowInfo():XML
			{
				var xml:XML = new XML(<category></category>);
				xml.@name = row.title;
				for(var i:int=1;i<row.numElements;i++)
				{
					var kind:XML = new XML(<kind></kind>);
					var ti:CategoryConfigItem = row.getChildAt(i) as CategoryConfigItem;
					kind.@name = StringUtil.trim(ti.ti.text);
					xml.appendChild(kind);
				}
				return xml;
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				if(valueChanged)
				{
					valueChanged = false;
					for each(var str:String in _categorys)
					{
						var ti:CategoryConfigItem = new CategoryConfigItem();
						ti.txt = str;
						row.addElement(ti);
					}
				}
			}
		]]>
	</fx:Script>
	<titleborderbox:TitledBorderBox id="row" title="{title}" horizontalGap="10" width="100%" 
									height="100%" layout="horizontal">
		<s:Button label="+" click="addItem()" width="40"/>
	</titleborderbox:TitledBorderBox>
	<s:VGroup height="100%">
		<s:Spacer height="8"/>
		<s:Button label="删除" height="90%" click="removeRow(event)"/>	
	</s:VGroup>
	
</s:HGroup>
